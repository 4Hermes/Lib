version: 3

env:
  DOPPLER_PROJECT_NAME: hermes
  DOPPLER_CONFIG_NAME: nonprod

tasks:
  display:variables:
    aliases: [dv, vars]
    silent: true
    desc: Writes/echoes the environment variables that are set within the Taskfile to the console/STDOUT.
    cmds:
      - echo "----------------------------------------------"
      - echo "DOPPLER_PROJECT_NAME = {{ .DOPPLER_PROJECT_NAME }}"
      - echo "DOPPLER_CONFIG_NAME = {{ .DOPPLER_CONFIG_NAME }}"
      - echo "----------------------------------------------"
      - echo "APP_PORT = {{ .APP_PORT }}"
      - echo "DEBUG = {{ .DEBUG }}"
      - echo "VERSION_TAG = {{ .VERSION_TAG }}"
      - echo "----------------------------------------------"
      - echo "DOCKER_CONTAINER_NAME = {{ .DOCKER_CONTAINER_NAME }}"
      - echo "DOCKER_IMAGE_NAME = {{ .DOCKER_IMAGE_NAME }}"
      - echo "----------------------------------------------"

  pretty:
    aliases: [p, format, fmt]
    silent: false
    desc: Uses the Prettier CLI tool to format the codebase.
    cmds: ['prettier --write .']

  build:
    aliases: [bd]
    silent: false
    desc: Builds the project into a Docker Image.
    cmds:
      - docker build -t {{ .DOCKER_IMAGE_NAME }}:latest -t {{ .DOCKER_IMAGE_NAME }}:{{ .VERSION_TAG }} .

  build:mkdocs:
    aliases: [bm]
    silent: false
    desc: Builds the website/project locally, using the mkdocs CLI tool.
    cmds: ['mkdocs build']

  clean:
    aliases: [c]
    silent: false
    desc: Stops & deletes the Docker container running the project.
    deps: ['stop']
    cmds: ['docker rm {{ .DOCKER_CONTAINER_NAME }}']

  start:
    aliases: [up]
    silent: false
    desc: Starts the project by ensuring a Docker Image was built and then running that Image in a container.
    deps: ['build']
    cmds:
      - docker run -d -p {{ .APP_PORT }}:{{ .APP_PORT }} --name {{ .DOCKER_CONTAINER_NAME }} {{ .DOCKER_IMAGE_NAME }}:{{ .VERSION_TAG }}

  stop:
    aliases: [down]
    silent: false
    desc: Stops the Docker Container that's locally running the website.
    cmds: ['docker stop {{ .DOCKER_CONTAINER_NAME }}']

  push:
    aliases: [dd]
    silent: false
    desc: Push the Docker Image, with all tags, to your configured registry.
    deps: ['build']
    cmds: ['docker push --all-tags {{ .DOCKER_IMAGE_NAME }}']
